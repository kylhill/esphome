substitutions:
  device_name: shelly-em
  friendly_name: "Shelly EM"
  area: "Basement"
  sample_rate: "1s"
  update_interval_fast: "30s"
  update_interval_slow: "60s"
  # Derived from Evergy bill usage
  cal_factor: 1.102413

packages:
  common: !include templates/common.yaml

# Device-specific config
# - https://www.esphome-devices.com/devices/Shelly-EM
# - https://www.esphome-devices.com/devices/Shelly-25
# - https://templates.blakadder.com/shelly_EM.html

esp8266:
  board: esp01_1m

logger:
  level: INFO

i2c:
  sda: GPIO12
  scl: GPIO14

sensor:
  - platform: ade7953_i2c
    # WARNING: Prevent overheating by setting this IRQ pin! - https://esphome.io/components/sensor/ade7953.html
    irq_pin: GPIO13
    voltage:
      name: Voltage
      id: voltage
      filters:
        - throttle_average: $update_interval_slow
    current_a:
      name: _Phase 1 Current
      id: current_phase_1
      internal: true
    current_b:
      name: _Phase 2 Current
      id: current_phase_2
      internal: true
    active_power_a:
      name: _Phase 1 Power
      id: power_phase_1
      filters:
        # Calibrate CT clamps, see: https://community.home-assistant.io/t/anyone-using-shelly-em/149867
        - lambda: if (x <= 0.0) return 0; else return x * $cal_factor;
      internal: true
    active_power_b:
      name: _Phase 2 Power
      id: power_phase_2
      filters:
        # Calibrate CT clamps, see: https://community.home-assistant.io/t/anyone-using-shelly-em/149867
        - lambda: if (x <= 0.0) return 0; else return x * $cal_factor;
      internal: true
    update_interval: $sample_rate

  - platform: template
    name: Total Power
    id: total_power
    state_class: measurement
    device_class: power
    lambda: return id(power_phase_1).state + id(power_phase_2).state;
    unit_of_measurement: W
    filters:
      - throttle_average: $update_interval_fast
    update_interval: $sample_rate

  - platform: total_daily_energy
    name: _Phase 1 Total Daily Energy
    id: energy_phase_1
    power_id: power_phase_1
    filters:
      # Multiplication factor from W to kWh is 0.001
      - multiply: 0.001
    unit_of_measurement: kWh
    internal: true

  - platform: total_daily_energy
    name: _Phase 2 Total Daily Energy
    id: energy_phase_2
    power_id: power_phase_2
    filters:
      # Multiplication factor from W to kWh is 0.001
      - multiply: 0.001
    unit_of_measurement: kWh
    internal: true

  - platform: template
    name: Total Daily Energy
    id: total_energy
    state_class: total_increasing
    device_class: energy
    lambda: return id(energy_phase_1).state + id(energy_phase_2).state;
    unit_of_measurement: kWh
    update_interval: $update_interval_slow

  - platform: template
    name: Total Current
    id: total_current
    state_class: measurement
    device_class: current
    lambda: return id(current_phase_1).state + id(current_phase_2).state;
    unit_of_measurement: A
    filters:
      - throttle_average: $update_interval_slow
    update_interval: $sample_rate

  - platform: template
    name: Total Power Factor
    id: total_power_factor
    state_class: measurement
    device_class: power_factor
    lambda: return id(total_power).state / id(voltage).state / id(total_current).state;
    accuracy_decimals: 3
    filters:
      - throttle_average: $update_interval_slow
    update_interval: $sample_rate

status_led:
  pin:
    number: GPIO0
    inverted: yes

switch:
  - platform: gpio
    name: Switch
    pin: GPIO15
    id: relay_switch
